{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "WebLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/laravel-develop-web"
      }
    },
    "ArtisanLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/laravel-develop-artisan"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "laravel",
                  "develop",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/laravel-develop*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/laravel-develop*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:*"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "${Storage.Arn}"
                    },
                    {
                      "Fn::Sub": "${Storage.Arn}/*"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "laravel",
              "develop",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "WebLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/laravel/develop/1704107101336-2024-01-01T11:05:01.336Z/laravel.zip"
        },
        "Handler": "Bref\\LaravelBridge\\Http\\OctaneHandler",
        "Runtime": "provided.al2",
        "FunctionName": "laravel-develop-web",
        "MemorySize": 1024,
        "Timeout": 28,
        "Environment": {
          "Variables": {
            "APP_ENV": "production",
            "POSTGRESQL_HOST": {
              "Fn::GetAtt": [
                "PostgreSqlRDSInstance",
                "Endpoint.Address"
              ]
            },
            "POSTGRESQL_PORT": {
              "Fn::GetAtt": [
                "PostgreSqlRDSInstance",
                "Endpoint.Port"
              ]
            },
            "BREF_LOOP_MAX": "250",
            "OCTANE_PERSIST_DATABASE_SESSIONS": "1",
            "FILESYSTEM_DISK": "s3",
            "AWS_BUCKET": {
              "Ref": "Storage"
            },
            "DB_CONNECTION": "pgsql",
            "DB_HOST": {
              "Fn::GetAtt": [
                "PostgreSqlRDSInstance",
                "Endpoint.Address"
              ]
            },
            "DB_PORT": {
              "Fn::GetAtt": [
                "PostgreSqlRDSInstance",
                "Endpoint.Port"
              ]
            },
            "DB_DATABASE": "develop_laravel",
            "DB_USERNAME": "master",
            "DB_PASSWORD": "password"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "ServerlessSecurityGroup",
                "GroupId"
              ]
            }
          ],
          "SubnetIds": [
            {
              "Ref": "ServerlessSubnetA"
            },
            {
              "Ref": "ServerlessSubnetB"
            },
            {
              "Ref": "ServerlessSubnetC"
            }
          ]
        },
        "Layers": [
          "arn:aws:lambda:us-east-1:534081306603:layer:php-82:57"
        ]
      },
      "DependsOn": [
        "WebLogGroup"
      ]
    },
    "ArtisanLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/laravel/develop/1704107101336-2024-01-01T11:05:01.336Z/laravel.zip"
        },
        "Handler": "artisan",
        "Runtime": "provided.al2",
        "FunctionName": "laravel-develop-artisan",
        "MemorySize": 1024,
        "Timeout": 720,
        "Environment": {
          "Variables": {
            "APP_ENV": "production",
            "POSTGRESQL_HOST": {
              "Fn::GetAtt": [
                "PostgreSqlRDSInstance",
                "Endpoint.Address"
              ]
            },
            "POSTGRESQL_PORT": {
              "Fn::GetAtt": [
                "PostgreSqlRDSInstance",
                "Endpoint.Port"
              ]
            },
            "FILESYSTEM_DISK": "s3",
            "AWS_BUCKET": {
              "Ref": "Storage"
            },
            "DB_CONNECTION": "pgsql",
            "DB_HOST": {
              "Fn::GetAtt": [
                "PostgreSqlRDSInstance",
                "Endpoint.Address"
              ]
            },
            "DB_PORT": {
              "Fn::GetAtt": [
                "PostgreSqlRDSInstance",
                "Endpoint.Port"
              ]
            },
            "DB_DATABASE": "develop_laravel",
            "DB_USERNAME": "master",
            "DB_PASSWORD": "password"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "ServerlessSecurityGroup",
                "GroupId"
              ]
            }
          ],
          "SubnetIds": [
            {
              "Ref": "ServerlessSubnetA"
            },
            {
              "Ref": "ServerlessSubnetB"
            },
            {
              "Ref": "ServerlessSubnetC"
            }
          ]
        },
        "Layers": [
          "arn:aws:lambda:us-east-1:534081306603:layer:php-82:57",
          "arn:aws:lambda:us-east-1:534081306603:layer:console:67"
        ]
      },
      "DependsOn": [
        "ArtisanLogGroup"
      ]
    },
    "WebLambdaVersionMJlJyzNhFFxR0PTEukuZ1lzo9WVjtJ9YZGpdn1iJK4": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "WebLambdaFunction"
        },
        "CodeSha256": "3757/HjHBH53mtVz3MXLxf3vYwCB6aF2luFMhxg+BYI="
      }
    },
    "ArtisanLambdaVersionqFuGkTwb5JfDaJxZuhmcNrx2eVslfrGqZLtwPMl8pc": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ArtisanLambdaFunction"
        },
        "CodeSha256": "3757/HjHBH53mtVz3MXLxf3vYwCB6aF2luFMhxg+BYI="
      }
    },
    "HttpApi": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "develop-laravel",
        "ProtocolType": "HTTP"
      }
    },
    "HttpApiStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "StageName": "$default",
        "AutoDeploy": true,
        "DefaultRouteSettings": {
          "DetailedMetricsEnabled": false
        }
      }
    },
    "WebLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "WebLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationWeb": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "WebLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRouteDefault": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "$default",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationWeb"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationWeb"
    },
    "Storage": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "develop-bucker-lar-servlers",
        "CorsConfiguration": {
          "CorsRules": [
            {
              "AllowedOrigins": [
                "*"
              ],
              "AllowedHeaders": [
                "*"
              ],
              "AllowedMethods": [
                "GET",
                "PUT",
                "POST",
                "HEAD"
              ],
              "MaxAge": 3000
            }
          ]
        },
        "LifecycleConfiguration": {
          "Rules": [
            {
              "ExpirationInDays": 2,
              "Prefix": "/tmp",
              "Status": "Enabled"
            }
          ]
        }
      }
    },
    "PostgreSqlRDSInstance": {
      "DependsOn": [
        "ServerlessVPCGA"
      ],
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "MasterUsername": "master",
        "MasterUserPassword": "password",
        "AllocatedStorage": 20,
        "DBName": "develop_laravel",
        "DBInstanceClass": "db.t4g.micro",
        "VPCSecurityGroups": [
          {
            "Fn::GetAtt": [
              "ServerlessSecurityGroup",
              "GroupId"
            ]
          }
        ],
        "DBSubnetGroupName": {
          "Ref": "ServerlessSubnetGroup"
        },
        "Engine": "postgres",
        "PubliclyAccessible": false
      }
    },
    "ServerlessInternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "ServerlessInternetGateway"
          }
        ]
      }
    },
    "ServerlessSecurityGroup": {
      "DependsOn": [
        "ServerlessVPC"
      ],
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "SecurityGroup for Serverless Functions",
        "VpcId": {
          "Ref": "ServerlessVPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 5432,
            "ToPort": 5432,
            "CidrIp": "10.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": 80,
            "ToPort": 80,
            "CidrIp": "10.0.0.0/0"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ServerlessSecurityGroup"
          }
        ]
      }
    },
    "ServerlessVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsSupport": true,
        "EnableDnsHostnames": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "ServerlessVPC"
          }
        ]
      }
    },
    "ServerlessVPCGA": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "ServerlessVPC"
        },
        "InternetGatewayId": {
          "Ref": "ServerlessInternetGateway"
        }
      }
    },
    "ServerlessSubnetGroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "RDS Subnet Group",
        "SubnetIds": [
          {
            "Ref": "ServerlessSubnetA"
          },
          {
            "Ref": "ServerlessSubnetB"
          },
          {
            "Ref": "ServerlessSubnetC"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ServerlessSubnetGroup"
          }
        ]
      }
    },
    "ServerlessSubnetA": {
      "DependsOn": [
        "ServerlessVPC"
      ],
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "ServerlessVPC"
        },
        "AvailabilityZone": "us-east-1a",
        "CidrBlock": "10.0.0.0/24",
        "Tags": [
          {
            "Key": "Name",
            "Value": "ServerlessSubnetA"
          }
        ]
      }
    },
    "ServerlessSubnetB": {
      "DependsOn": [
        "ServerlessVPC"
      ],
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "ServerlessVPC"
        },
        "AvailabilityZone": "us-east-1b",
        "CidrBlock": "10.0.1.0/24",
        "Tags": [
          {
            "Key": "Name",
            "Value": "ServerlessSubnetB"
          }
        ]
      }
    },
    "ServerlessSubnetC": {
      "DependsOn": [
        "ServerlessVPC"
      ],
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "ServerlessVPC"
        },
        "AvailabilityZone": "us-east-1c",
        "CidrBlock": "10.0.2.0/24",
        "Tags": [
          {
            "Key": "Name",
            "Value": "ServerlessSubnetC"
          }
        ]
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-laravel-develop-ServerlessDeploymentBucketName"
      }
    },
    "WebLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "WebLambdaVersionMJlJyzNhFFxR0PTEukuZ1lzo9WVjtJ9YZGpdn1iJK4"
      },
      "Export": {
        "Name": "sls-laravel-develop-WebLambdaFunctionQualifiedArn"
      }
    },
    "ArtisanLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ArtisanLambdaVersionqFuGkTwb5JfDaJxZuhmcNrx2eVslfrGqZLtwPMl8pc"
      },
      "Export": {
        "Name": "sls-laravel-develop-ArtisanLambdaFunctionQualifiedArn"
      }
    },
    "HttpApiId": {
      "Description": "Id of the HTTP API",
      "Value": {
        "Ref": "HttpApi"
      },
      "Export": {
        "Name": "sls-laravel-develop-HttpApiId"
      }
    },
    "HttpApiUrl": {
      "Description": "URL of the HTTP API",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "HttpApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            }
          ]
        ]
      },
      "Export": {
        "Name": "sls-laravel-develop-HttpApiUrl"
      }
    }
  }
}